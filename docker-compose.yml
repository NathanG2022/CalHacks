version: '3.8'

services:
  # Letta Database
  letta_db:
    image: postgres:15
    container_name: calhacks-letta-db
    environment:
      - POSTGRES_DB=letta
      - POSTGRES_USER=letta
      - POSTGRES_PASSWORD=letta
    volumes:
      - letta_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U letta -d letta"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - calhacks-network

  # Letta Server
  letta_server:
    build:
      context: ./letta
      dockerfile: Dockerfile
    container_name: calhacks-letta-server
    ports:
      - "8084:8083"
      - "8284:8283"
    environment:
      - LETTA_PG_URI=postgresql+pg8000://letta:letta@letta_db:5432/letta
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
      - AZURE_API_KEY=${AZURE_API_KEY}
      - AZURE_BASE_URL=${AZURE_BASE_URL}
      - AZURE_API_VERSION=${AZURE_API_VERSION}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - VLLM_API_BASE=${VLLM_API_BASE}
    volumes:
      - letta_server_data:/root/.letta
    networks:
      - calhacks-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8283/ && curl -f http://localhost:8283/v1/agents/ || exit 0"]
      interval: 15s
      timeout: 10s
      retries: 15
      start_period: 45s
    depends_on:
      letta_db:
        condition: service_healthy

  # Letta Nginx
  letta_nginx:
    image: nginx:alpine
    container_name: calhacks-letta-nginx
    ports:
      - "8080:80"
    volumes:
      - ./letta/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - letta_server
    networks:
      - calhacks-network

  # PromptBreaker
  promptbreaker:
    build:
      context: ./promptbreaker
      dockerfile: Dockerfile
    container_name: calhacks-promptbreaker
    depends_on:
      letta_server:
        condition: service_healthy
    restart: on-failure
    environment:
      - LETTA_URL=http://letta_server:8283
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./promptbreaker/data:/app/data
      - ./promptbreaker/attacker:/app/attacker
      - ./promptbreaker/target_letta:/app/target_letta
    networks:
      - calhacks-network
    # Run setup then demo by default
    command: ["./wait-for-letta.sh"]

  # CalHacks Web Application - Client
  calhacks_client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: calhacks-client
    ports:
      - "5174:5173"
    environment:
      - VITE_API_URL=http://localhost:3002
      - VITE_SUPABASE_URL=${SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - VITE_HF_API_KEY=${HUGGINGFACE_API_KEY}
    depends_on:
      - calhacks_server
    networks:
      - calhacks-network

  # CalHacks Web Application - Server
  calhacks_server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: calhacks-server
    ports:
      - "3002:3001"
    environment:
      - PORT=3001
      - NODE_ENV=development
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - LETTA_URL=http://letta_server:8283
      - LETTA_API_KEY=${LETTA_API_KEY}
      - LETTA_AGENT_ID=${LETTA_AGENT_ID}
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./promptbreaker:/app/promptbreaker
    depends_on:
      - letta_server
    networks:
      - calhacks-network

volumes:
  letta_db_data:
  letta_server_data:

networks:
  calhacks-network:
    driver: bridge